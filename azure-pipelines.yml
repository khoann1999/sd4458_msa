# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self
variables:
- group: dev-var-group
- name: imageRepositoryBackend
  value: 'backend'
- name: imageRepositoryFrontend
  value: 'frontend'
- name: dockerfilePathBackend
  value: '$(Build.SourcesDirectory)/src/backend/Dockerfile'
- name: dockerfilePathFrontend
  value: '$(Build.SourcesDirectory)/src/frontend/Dockerfile'
- name: vmImageName
  value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryBackend)
        dockerfile: $(dockerfilePathBackend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
            $(Build.BuildId)
            latest
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryFrontend)
        dockerfile: $(dockerfilePathFrontend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
            $(Build.BuildId)
            latest
          
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: '$(Build.SourcesDirectory)'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)'
          - script: |
              ls -la $(System.ArtifactsDirectory)/
              cat $(System.ArtifactsDirectory)/k8smanifest/backend.yaml
              cat $(System.ArtifactsDirectory)/k8smanifest/frontend.yaml
              cat $(System.ArtifactsDirectory)/k8smanifest/ingress.yml
              cat $(System.ArtifactsDirectory)/k8smanifest/mongodb.yaml
              

          - task: KubernetesManifest@1
            inputs:
              action: deploy
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'Free Trial(f9a5fd9d-72e0-4364-8d3b-360046e6fa28)'
              azureResourceGroup: 'rg-bold-ringtail'
              kubernetesCluster: 'cluster-fond-moth'
              useClusterAdmin: true
              manifests: |
                $(System.ArtifactsDirectory)/k8smanifest/backend.yaml
                $(System.ArtifactsDirectory)/k8smanifest/frontend.yaml
                $(System.ArtifactsDirectory)/k8smanifest/mongodb.yaml
                $(System.ArtifactsDirectory)/k8smanifest/ingress.yml